#!/bin/bash
##
# caICB normalization of raw binned contact maps
##


#### set path of the pipeline
bdir=`dirname $0`


#### useage
red='\033[0;31m'
blue='\033[1;34m'
green='\033[1;32m'
NC='\033[0m' # No Color
options_help="
${red}Command line${NC}: ${green}
    hicapp_caICB [options] [-s <pair_file>] [-r <binning_resolution>] [-c <genome_file>]

${red}Required${NC}: ${green}
    -s | --pair:            pair file which is the raw binned Hi-C contact map (recommanded: *.pair)
    -r | --bin-res:         binning resolution (e.g.: 1000000)
    -c | --chrom:           .genome file with chromosome length (e.g.: hg19.genome)
${NC}

${red}Options${NC}: ${green}
    -p | --threads:         Number of threads used for IC normalization (default: 1)
                            multiple threads only valid for ic_mep method
    -s | --outprefix:       Output file prefix (default: IC)
    -i | --IC-cmd:          IC command in HiCorrector (default: ic) (or ic_mep)
    -n | --N-iter:          Number of iterations used in IC step (default: 30)
    -b | --N-bin:           Number of binning steps selected to apply caICB,
                            (Parameter K in the caICB algorithm) (default: 200)
    -h | --help:            help
${NC}
"
usage () {
	echo -e "\n${red}Usage${NC}: ${green}`basename $0` -h for help${NC}"
	echo -e "$options_help"
	exit 1
}


#### set defalt arguments
norm_threads=1
sname=""
iccmd=ic
niter=30
nbin=200


# read the options
TEMP=`getopt -o s:r:c:p:s:i:n:b:h --long pair:,bin-res:,chrom:,threads:,outprefix:,IC-cmd:,N-iter:,N-bin:,help -n 'hicapp_caICB' -- "$@"`
eval set -- "$TEMP"


#### passing arguments
while :
do
    case "$1" in
    	-s | --pair)
    			case "$2" in
    					"") shift 2;;
 				      *) pair="$2"; shift 2;;
      		esac ;;
    	-r | --bin-res)
    			case "$2" in
    					"") shift 2;;
    					*) res="$2"; shift 2;;
    			esac;;
	  	-c | --chrom)
	  			case "$2" in
    					"") shift 2;;
    					*) chrom="$2"; shift 2;;
    			esac;;
      -q | --threads)
  				case "$2" in
  						"") shift 2;;
  						*) norm_threads="$2"; shift 2;;
  				esac;;
      -s | --outprefix)
  				case "$2" in
  						"") shift 2;;
  						*) sname="$2"; shift 2;;
  				esac;;
      -i | --IC-cmd)
  				case "$2" in
  						"") shift 2;;
  						*) iccmd="$2"; shift 2;;
  				esac;;
      -n | --N-iter)
  				case "$2" in
  						"") shift 2;;
  						*) niter="$2"; shift 2;;
  				esac;;
      -b | --N-bin)
  				case "$2" in
  						"") shift 2;;
  						*) nbin="$2"; shift 2;;
  				esac;;
  		-h | --help)
	  			usage
	  			exit 0
	  			;;
	  	--) # End of all options
	  			shift
	  			break
	  			;;
	  	-*)
	  			echo "Error: Unknown option: $1" >&2
	  			exit 1
	  			;;
	  	*)  # No more options
      		exit 1
	  			;;
    esac
done


#### judge parameters
if [ -z $pair ] || [ -z $res ] || [ -z $chrom ]
then
	usage
	exit 1
fi


#### set par
if [ $sname="" ]
then
  sname=${pair/.pair/}
fi


#### caICB normalize
## generate raw contact matrix by chromosome
if [ ! -d $sname.bychrom.matrix ]
then
	$bdir/bin/hicapp_binnorm_binpair2matrix_bychrom.pl $pair $chrom $res
else
	echo "#*_*# <$sname.bychrom.matrix> already exists...Skip~~~"
fi

## IC normalization by chromosome
if [ ! -e $sname.bychrom.icb ]
then
	$bdir/bin/hicapp_binnorm_ic_bychrom.sh $sname.bychrom.matrix $iccmd $norm_threads $niter $sname.bychrom.icb
else
	echo "#*_*# <$sname.bychrom.icb> already exists...Skip~~~"
fi

## caICB correction
if [ ! -e $sname.bychrom.caicb ]
then
	$bdir/bin/hicapp_binnorm_caicb.sh $pair $sname.bychrom.icb $nbin $res
else
	echo "#*_*# <$sname.bychrom.caicb> already exists...Skip~~~"
fi




